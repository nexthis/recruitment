openapi: 3.0.1
info:
  title: API Service
  version: 1.0.0
  description: API Service endpoints
servers:
  - url: "/"
paths:
  /order/add:
    post:
      tags:
        - order
      summary: Add a order to the database
      operationId: order-add
      requestBody:
        description: New user signing up
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DraftOrderSchema"
      responses:
        "200":
          description: Book was added
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderSchema"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestSchema"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorSchema"
  /order/all:
    get:
      tags:
        - order
      summary: Get all books in database
      operationId: book-get-all
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                properties:
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderSchema"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorSchema"
components:
  schemas:
    BadRequestSchema:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: 'PATH: [author] ;; MESSAGE: "author" is required'
      required:
        - error
    ServerErrorSchema:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: Internal server error
      required:
        - error
    NotFoundErrorSchema:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: Item not found
      required:
        - error
    DraftOrderSchema:
      type: object
      properties:
        client:
          type: object
          description: Name of the book
          example:
            city: Gdańsk
            createdAt: 2023-04-18T12:30:17.527Z
            name: Firma
            postcode: 87-56
            streetName: Taka Sobie
            streetNumber: 3
            updatedAt: 2023-04-18T12:30:17.527Z
        products:
          type: array
          description: Name of the author
          example:
            - name: Kiełbasa
              price: 45
            - name: Kiełbasa
              price: 45
      required:
        - name
        - author
    OrderSchema:
      allOf:
        - $ref: "#/components/schemas/DraftOrderSchema"
      type: object
      properties:
        _id:
          type: string
          description: MongoDB id of the document
          example: 5d7224d3b40b1a1a046697dd
        createdAt:
          type: number
          description: Created at timestamp in miliseconds
          example: 1616158942428
        updatedAt:
          type: number
          description: Updated at timestamp in miliseconds
          example: 1616158942428
      required:
        - _id
        - createdAt
        - updatedAt
